     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15                                      ; Student:
    16                                      ; .Matrikel dw 0000_0101_0101_1000 ;558
    17                                      ; .Vorname db 77 ;M
    18                                      ; .Name db 82 ;R
    19                                  
    20                                      ; geburt resd 1
    21                                      ; tag dw 15
    22                                      ; monat dw 1
    23                                      
    24 00000000 0C                          num db 12
    25                                      
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; ...
    30                                          
    31 00000000 A0[00000000]                    mov al, [num]   ;al = num
    32 00000005 B100                            mov cl, 0       ;cl = counter for num%2==0
    33                                          
    34                                      while:
    35 00000007 F8                              clc
    36 00000008 D0E8                            shr al, 1       ;shift right by one bit = /2
    37                                          
    38 0000000A 7208                            jc endwhile     ;if carry == 1 (rest == 1) -> break
    39                                          
    40 0000000C 84C0                            test al, al     ;al & al
    41 0000000E 7404                            jz endwhile     ;if al == 0 -> break
    42                                          
    43 00000010 FEC1                            inc cl          ;cl++
    44                                          
    45 00000012 EBF3                            jmp while
    46                                      endwhile:
    47                                          
    48                                          ; mov ax, [tag]
    49                                          ; mov bx, [monat]
    50                                          ; mul bx          ;dx:ax = tag * monat
    51                                          ; mov word[geburt+0], ax
    52                                          ; mov word[geburt+2], dx
    53                                      
    54                                          ; exit(0)
    55 00000014 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    56 00000016 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
