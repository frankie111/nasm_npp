     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 8877665544332211            a dq 1122334455667788h
    15 00000008 5E4D3C2B1AEFCDAB            b dq 0abcdef1a2b3c4d5eh
    16 00000010 <res 00000008>              r resq 1
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A1[00000000]                    mov eax, dword [a+0]
    23 00000005 8B15[04000000]                  mov edx, dword [a+4]
    24                                      
    25 0000000B 8B1D[08000000]                  mov ebx, dword [b+0]
    26 00000011 8B0D[0C000000]                  mov ecx, dword [b+4]
    27                                          
    28 00000017 F8                              clc
    29                                          
    30 00000018 01D8                            add eax, ebx
    31 0000001A 11CA                            adc edx, ecx
    32                                          
    33 0000001C A3[10000000]                    mov dword [r+0], eax
    34 00000021 8915[14000000]                  mov dword [r+4], edx
    35                                      
    36                                          ; exit(0)
    37 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
